# Contains all API path definitions for the evaluations resource

/evaluations/distribution:
  get:
    summary: Get maturity level distribution
    tags: [Evaluations]
    security:
      - BearerAuth: []
    responses:
      200:
        description: Distribution of maturity levels across services
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  level:
                    type: string
                  count:
                    type: integer
      401:
        $ref: '#/components/responses/UnauthorizedError'

/evaluations/{id}:
  get:
    summary: Get evaluation by ID
    tags: [Evaluations]
    security:
      - BearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
    responses:
      200:
        description: Evaluation details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeasurementEvaluation'
      401:
        $ref: '#/components/responses/UnauthorizedError'
      404:
        $ref: '#/components/responses/NotFoundError'

/evaluations/{id}/history:
  get:
    summary: Get evaluation history
    tags: [Evaluations]
    security:
      - BearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
    responses:
      200:
        description: Evaluation history records
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EvaluationHistory'
      401:
        $ref: '#/components/responses/UnauthorizedError'
      404:
        $ref: '#/components/responses/NotFoundError'

/evaluations/{id}/evidence:
  post:
    summary: Submit evidence for evaluation
    tags: [Evaluations]
    security:
      - BearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - evidenceLocation
            properties:
              evidenceLocation:
                type: string
              notes:
                type: string
    responses:
      200:
        description: Evidence submitted successfully
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeasurementEvaluation'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
      401:
        $ref: '#/components/responses/UnauthorizedError'
      403:
        $ref: '#/components/responses/ForbiddenError'
      404:
        $ref: '#/components/responses/NotFoundError'

/evaluations/{id}/status:
  put:
    summary: Update evaluation status
    tags: [Evaluations]
    security:
      - BearerAuth: []
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - status
            properties:
              status:
                type: string
                enum: [not_implemented, evidence_submitted, validating_evidence, evidence_rejected, implemented]
              notes:
                type: string
    responses:
      200:
        description: Evaluation status updated successfully
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeasurementEvaluation'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
      401:
        $ref: '#/components/responses/UnauthorizedError'
      403:
        $ref: '#/components/responses/ForbiddenError'
      404:
        $ref: '#/components/responses/NotFoundError'

/evaluations:
  post:
    summary: Create or update evaluation
    tags: [Evaluations]
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - serviceId
              - measurementId
              - campaignId
              - status
            properties:
              serviceId:
                type: string
                format: uuid
              measurementId:
                type: string
                format: uuid
              campaignId:
                type: string
                format: uuid
              status:
                type: string
                enum: [not_implemented, evidence_submitted, validating_evidence, evidence_rejected, implemented]
              evidenceLocation:
                type: string
              notes:
                type: string
    responses:
      200:
        description: Evaluation updated successfully
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeasurementEvaluation'
      201:
        description: Evaluation created successfully
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeasurementEvaluation'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
      401:
        $ref: '#/components/responses/UnauthorizedError'
      403:
        $ref: '#/components/responses/ForbiddenError'
      404:
        description: Service, Measurement, or Campaign not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
